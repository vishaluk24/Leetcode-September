class Solution {
public:
    int n;
    unordered_set<string> st;
   int dp[51];
    unordered_map<string,int> mp;
    int solve(int ind,string& s){
      if(ind>=n){
        return 0;
      }
      if(dp[ind]!=-1){
        return dp[ind];
      }
      int take=INT_MAX;
      int nottake=0;
      for(int i=0;i<s.length()-ind;i++){
        if(st.count(s.substr(ind,i+1))){
         take=min(take,solve(ind+i+1,s));
        }
      }
      nottake=1+solve(ind+1,s);
      return dp[ind]= min(take,nottake);
    }
    int minExtraChar(string s, vector<string>& dictionary) {
        n=s.size();
        memset(dp,-1,sizeof(dp));
        for(auto& x:dictionary){
          st.insert(x);
        }
      
      return solve(0,s);

    }
};
